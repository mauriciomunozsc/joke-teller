//////////////////////////////////
//////HELLO BUILD.GRADLE FILE/////
//////////////////////////////////
//////////////////////////////////////////////////////////////
/////FOR HINTS ON HOW TO DO THINGS: 
/////	https://docs.gradle.org/current/userguide/plugins.htm
//////////////////////////////////////////////////////////////

////////////////////////////////////////////
//////THIS SECTION CONTAINS ALL PLUGINS/////
////////////////////////////////////////////

/**Binary Plugins**/
plugins {
	id 'java'
	id 'eclipse'
}

////////////////////////////////////
/////DECLARING THE DEFAULT TASK/////
////////////////////////////////////

defaultTasks 'build'


//////////////////////////////////////////////
/////THIS SECTION CONTAINS ALL SOURCESETS/////
//////////////////////////////////////////////

sourceSets{
	main.java.srcDir "src/main"
}

/////////////////////////////////////////////////////////////////
/////THIS SECTION CONTAINS ALL REPOSITORIES AND DEPENDENCIES/////
/////////////////////////////////////////////////////////////////

repositories{
	mavenCentral()
}

dependencies{
	/**Allows for StringUtils for swapCase**/
	compile "org.apache.commons:commons-lang3:3.3.2"
}

/////////////////////////////////////////////////////////
/////THIS SECTION CONTAINS ALL CUSTOM TASK AND TYPES/////
/////////////////////////////////////////////////////////

task hello
task joke(type:JavaExec)
task goodbye
task run

/////////////////////////////////////////////////////////////////////////////////////
/////THIS SECTION CONTAINS ALL TASK GROUPS, DEPENDENCIES AND DESCRIPTIONS/////
/////////////////////////////////////////////////////////////////////////////////////

hello{
	group 'greeting'
	description 'Greets you.'
}

joke{
	group 'main'
	description 'Tells you a joke.'
	dependsOn hello
}

goodbye{
	dependsOn hello
	dependsOn joke
}

build{
	dependsOn clean
}

run{
	group 'main'
	description 'alias to joke task.'
	dependsOn joke
}

///////////////////////////////////////////////////
/////THIS SECTION CONTAINS ALL TASK RUN ORDERS/////
///////////////////////////////////////////////////

joke{
	mustRunAfter hello
}

/**Ensures that the project build is cleaned before any of the build task run**/
compileJava{
	mustRunAfter clean
}

///////////////////////////////////////////////////////
//////THIS SECTION CONTAINS ALL TASK FUNCTIONALITY/////
///////////////////////////////////////////////////////

hello{
	doLast{
		println 'hello world'
	}
}

joke{
	main = '-jar'
	args = ["build/libs/Joke Teller.jar"]
}

goodbye{
	doLast{
		println 'goodbye world'
	}
}

jar{
	from configurations.compile.collect { zipTree it } 
	manifest.attributes "Main-Class": "main/JokeTeller"
}
